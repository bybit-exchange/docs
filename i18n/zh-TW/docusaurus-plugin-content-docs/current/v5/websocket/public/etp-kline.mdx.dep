---
title: ETP淨值K線
sidebar_label: ETP淨值K線
sidebar_position: 6
---

訂閱槓桿代幣的淨值K線行情推送服務

:::tip
若`confirm`=true, 則表示這根蠟燭是最後一根K線, 否則，這是切片數據
:::

**可用的時間粒度:**<br/>
* `1` `3` `5` `15` `30` (分鐘)
* `60` `120` `240` `360` `720` (分鐘)
* `D` (天)
* `W` (週)
* `M` (月)

**推送頻率:** 1-60秒

**Topic:**<br/>
`kline_lt.{interval}.{symbol}` e.g., kline_lt.30.BTC3SUSDT

### 響應參數
| 參數 | 類型 | 說明|
|:----- |:-----|----- |
|topic |string |Topic名 |
|type |string |數據類型. `snapshot` |
|ts |number |行情服務生成數據的時間戳 (毫秒) |
|data |array |Object |
|> start |number |開始時間戳 (毫秒) |
|> end |number |結束時間戳 (毫秒). 若時間還未到時間跨度的最後時間，則表示當前時間 |
|> [interval](../../enum#interval) |string |K線粒度 |
|> open |string |開盤價 |
|> close |string |收盤價  |
|> high |string |最高價 |
|> low |string |最低價 |
|> confirm |boolean |是否確認 |
|> timestamp |number |蠟燭中最後一筆淨值時間戳 (毫秒) |

### 訂閱示例

```python
from pybit.unified_trading import WebSocket
from time import sleep
ws = WebSocket(
    testnet=True,
    channel_type="spot",
)
def handle_message(message):
    print(message)
ws.lt_kline_stream(
    interval=30,
    symbol="EOS3LUSDT",
    callback=handle_message
)
while True:
    sleep(1)
```

### 響應示例

```json
{
    "type": "snapshot",
    "topic": "kline_lt.5.EOS3LUSDT",
    "data": [
        {
            "start": 1672325100000,
            "end": 1672325399999,
            "interval": "5",
            "open": "0.416039541212402799",
            "close": "0.41477848043290448",
            "high": "0.416039541212402799",
            "low": "0.409734237314911206",
            "confirm": false,
            "timestamp": 1672325322393
        }
    ],
    "ts": 1672325322393
}
```
