"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[11005],{3905:(t,e,r)=>{r.d(e,{Zo:()=>m,kt:()=>g});var n=r(67294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function d(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},l=Object.keys(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)r=l[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var p=n.createContext({}),o=function(t){var e=n.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},m=function(t){var e=o(t.components);return n.createElement(p.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,l=t.originalType,p=t.parentName,m=d(t,["components","mdxType","originalType","parentName"]),k=o(r),g=a,N=k["".concat(p,".").concat(g)]||k[g]||s[g]||l;return r?n.createElement(N,i(i({ref:e},m),{},{components:r})):n.createElement(N,i({ref:e},m))}));function g(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=r.length,i=new Array(l);i[0]=k;var d={};for(var p in e)hasOwnProperty.call(e,p)&&(d[p]=e[p]);d.originalType=t,d.mdxType="string"==typeof t?t:a,i[1]=d;for(var o=2;o<l;o++)i[o]=r[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},94936:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var n=r(87462),a=(r(67294),r(3905));const l={title:"Get Open Orders",sidebar_label:"Get Open Orders (real-time)",sidebar_position:4},i=void 0,d={unversionedId:"v5/order/open-order",id:"v5/order/open-order",title:"Get Open Orders",description:"Query unfilled or partially filled orders in real-time. To query older order records, please use the order history interface.",source:"@site/docs/v5/order/open-order.mdx",sourceDirName:"v5/order",slug:"/v5/order/open-order",permalink:"/docs/v5/order/open-order",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Get Open Orders",sidebar_label:"Get Open Orders (real-time)",sidebar_position:4},sidebar:"v5SideBar",previous:{title:"Cancel Order",permalink:"/docs/v5/order/cancel-order"},next:{title:"Cancel All Orders",permalink:"/docs/v5/order/cancel-all"}},p={},o=[{value:"HTTP Request",id:"http-request",level:3},{value:"Request Parameters",id:"request-parameters",level:3},{value:"Response Parameters",id:"response-parameters",level:3},{value:"Request Example",id:"request-example",level:3},{value:"Response Example",id:"response-example",level:3}],m=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)},s=m("Button"),k=m("Tabs"),g=m("TabItem"),N={toc:o};function u(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,n.Z)({},N,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Query unfilled or partially filled orders in ",(0,a.kt)("strong",{parentName:"p"},"real-time"),". To query older order records, please use the ",(0,a.kt)("a",{parentName:"p",href:"order-list#"},"order history")," interface."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Unified account covers: Spot / USDT perpetual / USDC contract / Inverse contract / Options"),(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Classic account covers: Spot / USDT perpetual / Inverse contract"))),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"It also supports querying filled, cancelled, and rejected orders which occurred in last 10 minutes (check the ",(0,a.kt)("inlineCode",{parentName:"li"},"openOnly")," param). At most, 500 orders will be returned."),(0,a.kt)("li",{parentName:"ul"},"You can query by symbol, baseCoin, orderId and orderLinkId, and if you pass multiple params, the system will process them according to this priority: orderId > orderLinkId > symbol > baseCoin."),(0,a.kt)("li",{parentName:"ul"},"The records are sorted by the ",(0,a.kt)("inlineCode",{parentName:"li"},"createdTime")," from newest to oldest."))),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Classic account spot trade can return open orders only")),(0,a.kt)("h3",{id:"http-request"},"HTTP Request"),(0,a.kt)("p",null,"GET ",(0,a.kt)("inlineCode",{parentName:"p"},"/v5/order/realtime")),(0,a.kt)("h3",{id:"request-parameters"},"Request Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Comments"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"category"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"true")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Product type ",(0,a.kt)("ul",null,(0,a.kt)("li",null,"Unified account: ",(0,a.kt)("inlineCode",{parentName:"td"},"spot"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"linear"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"inverse"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"option")),(0,a.kt)("li",null,"Classic account: ",(0,a.kt)("inlineCode",{parentName:"td"},"spot"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"linear"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"inverse"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"symbol"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Symbol name. For ",(0,a.kt)("strong",{parentName:"td"},"linear"),", either ",(0,a.kt)("inlineCode",{parentName:"td"},"symbol"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"baseCoin"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"settleCoin")," is ",(0,a.kt)("strong",{parentName:"td"},"required"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"baseCoin"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Base coin. Supports ",(0,a.kt)("inlineCode",{parentName:"td"},"linear"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"inverse")," & ",(0,a.kt)("inlineCode",{parentName:"td"},"option"),". For ",(0,a.kt)("inlineCode",{parentName:"td"},"option"),". Return all option open orders if not passed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"settleCoin"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Settle coin ",(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("b",null,"linear"),": either ",(0,a.kt)("inlineCode",{parentName:"td"},"symbol"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"baseCoin")," or ",(0,a.kt)("inlineCode",{parentName:"td"},"settleCoin")," is ",(0,a.kt)("strong",{parentName:"td"},"required")),(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"spot"),": invalid")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"orderId"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order ID")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"orderLinkId"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"User customised order ID")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"openOnly"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,"Unified account & Classic account: ",(0,a.kt)("inlineCode",{parentName:"td"},"0"),"(default) - query open orders ",(0,a.kt)("strong",{parentName:"td"},"only")),(0,a.kt)("li",null,"Unified account - spot / linear / option: ",(0,a.kt)("inlineCode",{parentName:"td"},"1"),(0,a.kt)("br",null),"Unified account - inverse & Classic account - linear / inverse: ",(0,a.kt)("inlineCode",{parentName:"td"},"2")," ",(0,a.kt)("br",null),"return cancelled, rejected or totally filled orders by last 10 minutes, A maximum of 500 records are kept under each account. If the Bybit service is restarted due to an update, this part of the data will be cleared and accumulated again, but the order records will still be queried in ",(0,a.kt)("a",{parentName:"td",href:"order-list#"},"order history")),(0,a.kt)("li",null,"Classic ",(0,a.kt)("inlineCode",{parentName:"td"},"spot"),": not supported, return open orders only")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"orderFilter"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Order"),": active order, ",(0,a.kt)("inlineCode",{parentName:"td"},"StopOrder"),": conditional order for Futures and Spot, ",(0,a.kt)("inlineCode",{parentName:"td"},"tpslOrder"),": spot TP/SL order, ",(0,a.kt)("inlineCode",{parentName:"td"},"OcoOrder"),": Spot OCO orders",(0,a.kt)("ul",null,(0,a.kt)("li",null,"Classic account ",(0,a.kt)("inlineCode",{parentName:"td"},"spot"),": return ",(0,a.kt)("inlineCode",{parentName:"td"},"Order")," active order by default"),(0,a.kt)("li",null,"Others: all kinds of orders by default")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"limit"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,a.kt)("td",{parentName:"tr",align:null},"Limit for data size per page. ","[",(0,a.kt)("inlineCode",{parentName:"td"},"1"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"50"),"]",". Default: ",(0,a.kt)("inlineCode",{parentName:"td"},"20"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"cursor"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Cursor. Use the ",(0,a.kt)("inlineCode",{parentName:"td"},"nextPageCursor")," token from the response to retrieve the next page of the result set")))),(0,a.kt)("h3",{id:"response-parameters"},"Response Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Comments"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"category"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Product type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"nextPageCursor"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Refer to the ",(0,a.kt)("inlineCode",{parentName:"td"},"cursor")," request parameter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"list"),(0,a.kt)("td",{parentName:"tr",align:"left"},"array"),(0,a.kt)("td",{parentName:"tr",align:null},"Object")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> orderId"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order ID")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> orderLinkId"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"User customised order ID")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> blockTradeId"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Paradigm block trade ID")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> symbol"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Symbol name")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> price"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order price")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> qty"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order qty")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> side"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Side. ",(0,a.kt)("inlineCode",{parentName:"td"},"Buy"),",",(0,a.kt)("inlineCode",{parentName:"td"},"Sell"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> isLeverage"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Whether to borrow. ",(0,a.kt)("strong",{parentName:"td"},"Unified ",(0,a.kt)("inlineCode",{parentName:"strong"},"spot"))," only. ",(0,a.kt)("inlineCode",{parentName:"td"},"0"),": false, ",(0,a.kt)("inlineCode",{parentName:"td"},"1"),": true. . ",(0,a.kt)("em",{parentName:"td"},"Classic ",(0,a.kt)("inlineCode",{parentName:"em"},"spot")," is not supported, always ",(0,a.kt)("inlineCode",{parentName:"em"},"0")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#positionidx"},"positionIdx")),(0,a.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,a.kt)("td",{parentName:"tr",align:null},"Position index. Used to identify positions in different position modes.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#orderstatus"},"orderStatus")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order status")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#createtype"},"createType")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order create type ",(0,a.kt)("li",null,"Only for category=linear or inverse"),(0,a.kt)("li",null,"Spot, Option do not have this key"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#canceltype"},"cancelType")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Cancel type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#rejectreason"},"rejectReason")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Reject reason. ",(0,a.kt)("em",{parentName:"td"},"Classic ",(0,a.kt)("inlineCode",{parentName:"em"},"spot")," is not supported"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> avgPrice"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Average filled price ",(0,a.kt)("li",null,"UTA: returns ",(0,a.kt)("inlineCode",{parentName:"td"},'""')," for those orders without avg price"),(0,a.kt)("li",null,"Classic account: returns ",(0,a.kt)("inlineCode",{parentName:"td"},'"0"')," for those orders without avg price"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> leavesQty"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The remaining qty not executed. ",(0,a.kt)("em",{parentName:"td"},"Classic ",(0,a.kt)("inlineCode",{parentName:"em"},"spot")," is not supported"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> leavesValue"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The estimated value not executed. ",(0,a.kt)("em",{parentName:"td"},"Classic ",(0,a.kt)("inlineCode",{parentName:"em"},"spot")," is not supported"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> cumExecQty"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Cumulative executed order qty")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> cumExecValue"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Cumulative executed order value. ",(0,a.kt)("em",{parentName:"td"},"Classic ",(0,a.kt)("inlineCode",{parentName:"em"},"spot")," is not supported"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> cumExecFee"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Cumulative executed trading fee. ",(0,a.kt)("em",{parentName:"td"},"Classic ",(0,a.kt)("inlineCode",{parentName:"em"},"spot")," is not supported"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#timeinforce"},"timeInForce")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Time in force")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#ordertype"},"orderType")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order type. ",(0,a.kt)("inlineCode",{parentName:"td"},"Market"),",",(0,a.kt)("inlineCode",{parentName:"td"},"Limit"),". For TP/SL order, it means the order type after triggered")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#stopordertype"},"stopOrderType")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Stop order type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> orderIv"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Implied volatility")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> triggerPrice"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Trigger price. If ",(0,a.kt)("inlineCode",{parentName:"td"},"stopOrderType"),"=",(0,a.kt)("em",{parentName:"td"},"TrailingStop"),", it is activate price. Otherwise, it is trigger price")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> takeProfit"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Take profit price")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> stopLoss"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Stop loss price")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> tpslMode"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"TP/SL mode, ",(0,a.kt)("inlineCode",{parentName:"td"},"Full"),": entire position for TP/SL. ",(0,a.kt)("inlineCode",{parentName:"td"},"Partial"),': partial position tp/sl. Spot does not have this field, and Option returns always ""')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ocoTriggerType"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The trigger type of Spot OCO order.",(0,a.kt)("inlineCode",{parentName:"td"},"OcoTriggerByUnknown"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"OcoTriggerTp"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"OcoTriggerBySl"),". ",(0,a.kt)("em",{parentName:"td"},"Classic ",(0,a.kt)("inlineCode",{parentName:"em"},"spot")," is not supported"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> tpLimitPrice"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The limit order price when take profit price is triggered")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> slLimitPrice"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The limit order price when stop loss price is triggered")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#triggerby"},"tpTriggerBy")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The price type to trigger take profit")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#triggerby"},"slTriggerBy")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The price type to trigger stop loss")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> triggerDirection"),(0,a.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,a.kt)("td",{parentName:"tr",align:null},"Trigger direction. ",(0,a.kt)("inlineCode",{parentName:"td"},"1"),": rise, ",(0,a.kt)("inlineCode",{parentName:"td"},"2"),": fall")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#triggerby"},"triggerBy")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The price type of trigger price")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> lastPriceOnCreated"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Last price when place the order")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> reduceOnly"),(0,a.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,a.kt)("td",{parentName:"tr",align:null},"Reduce only. ",(0,a.kt)("inlineCode",{parentName:"td"},"true")," means reduce position size")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> closeOnTrigger"),(0,a.kt)("td",{parentName:"tr",align:"left"},"boolean"),(0,a.kt)("td",{parentName:"tr",align:null},"Close on trigger. ",(0,a.kt)("a",{href:"https://www.bybit.com/en-US/help-center/bybitHC_Article?language=en_US&id=000001050"},"What is a close on trigger order?"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> placeType"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Place type, ",(0,a.kt)("inlineCode",{parentName:"td"},"option")," used. ",(0,a.kt)("inlineCode",{parentName:"td"},"iv"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"price"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> ",(0,a.kt)("a",{parentName:"td",href:"../enum#smptype"},"smpType")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"SMP execution type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> smpGroup"),(0,a.kt)("td",{parentName:"tr",align:"left"},"integer"),(0,a.kt)("td",{parentName:"tr",align:null},"Smp group ID. If the UID has no group, it is ",(0,a.kt)("inlineCode",{parentName:"td"},"0")," by default")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> smpOrderId"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The counterparty's orderID which triggers this SMP execution")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> createdTime"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order created timestamp (ms)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"> updatedTime"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order updated timestamp (ms)")))),(0,a.kt)("a",{href:"/api-explorer/v5/trade/open-order"},(0,a.kt)(s,{mdxType:"Button"},"RUN >>")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"request-example"},"Request Example"),(0,a.kt)(k,{groupId:"programming-languages",mdxType:"Tabs"},(0,a.kt)(g,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},"GET /v5/order/realtime?symbol=ETHUSDT&category=linear&openOnly=0&limit=1  HTTP/1.1\nHost: api-testnet.bybit.com\nX-BAPI-SIGN: XXXXX\nX-BAPI-API-KEY: XXXXX\nX-BAPI-TIMESTAMP: 1672219525810\nX-BAPI-RECV-WINDOW: 5000\nContent-Type: application/json\n"))),(0,a.kt)(g,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from pybit.unified_trading import HTTP\nsession = HTTP(\n    testnet=True,\n    api_key="XXXXX",\n    api_secret="XXXXX",\n)\nprint(session.get_open_orders(\n    category="linear",\n    symbol="ETHUSDT",\n    openOnly=0,\n    limit=1,\n))\n'))),(0,a.kt)(g,{value:"Node",label:"Node.js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-n4js"},"const { RestClientV5 } = require('bybit-api');\n\nconst client = new RestClientV5({\n    testnet: true,\n    key: 'apikey',\n    secret: 'apisecret',\n});\n\nclient\n    .getActiveOrders({\n        category: 'linear',\n        symbol: 'ETHUSDT',\n        openOnly: 0,\n        limit: 1,\n    })\n    .then((response) => {\n        console.log(response);\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n")))),(0,a.kt)("h3",{id:"response-example"},"Response Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "retCode": 0,\n    "retMsg": "OK",\n    "result": {\n        "list": [\n            {\n                "orderId": "fd4300ae-7847-404e-b947-b46980a4d140",\n                "orderLinkId": "test-000005",\n                "blockTradeId": "",\n                "symbol": "ETHUSDT",\n                "price": "1600.00",\n                "qty": "0.10",\n                "side": "Buy",\n                "isLeverage": "",\n                "positionIdx": 1,\n                "orderStatus": "New",\n                "cancelType": "UNKNOWN",\n                "rejectReason": "EC_NoError",\n                "avgPrice": "0",\n                "leavesQty": "0.10",\n                "leavesValue": "160",\n                "cumExecQty": "0.00",\n                "cumExecValue": "0",\n                "cumExecFee": "0",\n                "timeInForce": "GTC",\n                "orderType": "Limit",\n                "stopOrderType": "UNKNOWN",\n                "orderIv": "",\n                "triggerPrice": "0.00",\n                "takeProfit": "2500.00",\n                "stopLoss": "1500.00",\n                "tpTriggerBy": "LastPrice",\n                "slTriggerBy": "LastPrice",\n                "triggerDirection": 0,\n                "triggerBy": "UNKNOWN",\n                "lastPriceOnCreated": "",\n                "reduceOnly": false,\n                "closeOnTrigger": false,\n                "smpType": "None",\n                "smpGroup": 0,\n                "smpOrderId": "",\n                "tpslMode": "Full",\n                "tpLimitPrice": "",\n                "slLimitPrice": "",\n                "placeType": "",\n                "createdTime": "1684738540559",\n                "updatedTime": "1684738540561"\n            }\n        ],\n        "nextPageCursor": "page_args%3Dfd4300ae-7847-404e-b947-b46980a4d140%26symbol%3D6%26",\n        "category": "linear"\n    },\n    "retExtInfo": {},\n    "time": 1684765770483\n}\n')))}u.isMDXComponent=!0}}]);