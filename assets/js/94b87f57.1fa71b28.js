"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[3905],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},b=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(t),b=o,m=u["".concat(c,".").concat(b)]||u[b]||d[b]||r;return t?a.createElement(m,s(s({ref:n},p),{},{components:t})):a.createElement(m,s({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=b;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var l=2;l<r;l++)s[l]=t[l];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},14399:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=t(87462),o=(t(67294),t(3905));const r={title:"Connect",sidebar_label:"Connect",slug:"/copy-trade/ws/connect"},s=void 0,i={unversionedId:"v3/copy-trade/wss-authentication",id:"v3/copy-trade/wss-authentication",title:"Connect",description:"Note that currently Copy Trading only supports USDT perpetual and the following endpoints only apply to USDT Perpetual",source:"@site/docs/v3/copy-trade/wss-authentication.mdx",sourceDirName:"v3/copy-trade",slug:"/copy-trade/ws/connect",permalink:"/docs/copy-trade/ws/connect",draft:!1,tags:[],version:"current",frontMatter:{title:"Connect",sidebar_label:"Connect",slug:"/copy-trade/ws/connect"}},c={},l=[{value:"IP Limits",id:"ip-limits",level:2},{value:"How to Send Heartbeat Packet",id:"how-to-send-heartbeat-packet",level:2},{value:"How to Subscribe to Topics",id:"how-to-subscribe-to-topics",level:2},{value:"Understanding Websocket Filters",id:"understanding-websocket-filters",level:3},{value:"Understanding Websocket Filters unsubscription",id:"understanding-websocket-filters-unsubscription",level:3},{value:"Understanding Subscription Response",id:"understanding-subscription-response",level:2}],p={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Note that currently Copy Trading only supports USDT perpetual and the following endpoints only apply to USDT Perpetual")),(0,o.kt)("p",null,"Base endpoints:"),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("b",null,"Testnet"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",null,"Public Channel: ",(0,o.kt)("span",{id:"testnet_address"},"wss://stream-testnet.bybit.com/contract/usdt/public/v3")),(0,o.kt)("li",null,"Private Channel: ",(0,o.kt)("span",{id:"testnet_private_address"},"wss://stream-testnet.bybit.com/realtime_private"))),(0,o.kt)("li",null,(0,o.kt)("b",null,"Mainnet"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",null,"Public Channel: ",(0,o.kt)("span",{id:"mainnet_address"},"wss://stream.bybit.com/contract/usdt/public/v3")),(0,o.kt)("li",null,"Private Channel: ",(0,o.kt)("span",{id:"mainnet_private_address"},"wss://stream.bybit.com/realtime_private")))),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("b",null,"Public")," channel do not require authentication. The following section applies to ",(0,o.kt)("b",null,"private")," channel only."),(0,o.kt)("p",null,"Apply for authentication when establishing a connection."),(0,o.kt)("p",null,"Note: if you're using ",(0,o.kt)("a",{href:"https://github.com/bybit-exchange/pybit"},"pybit"),", ",(0,o.kt)("a",{href:"https://www.npmjs.com/package/bybit-api"},"bybit-api"),", or another high-level library, you can ignore this code - as authentication is handled for you."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "op": "auth",\n    "args": [\n        "api_key",\n        1662350400000, //expires; is greater than your current timestamp\n        "singature"\n    ]\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# based on: https://github.com/bybit-exchange/pybit/blob/master/pybit/_http_manager.py\n\nimport hmac\nimport json\nimport time\nimport websocket\n\napi_key = ""\napi_secret = ""\n\n# Generate expires.\nexpires = int((time.time() + 1) * 1000)\n\n# Generate signature.\nsignature = str(hmac.new(\n    bytes(api_secret, "utf-8"),\n    bytes(f"GET/realtime{expires}", "utf-8"), digestmod="sha256"\n).hexdigest())\n\nws = websocket.WebSocketApp(\n    url=url,\n    ...\n)\n\n# Authenticate with API.\nws.send(\n    json.dumps({\n        "op": "auth",\n        "args": [api_key, expires, signature]\n    })\n)\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The response sample of authentication success")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "success": true,\n    "ret_msg": "",\n    "conn_id": "16c79bf6-267d-4e06-a0c1-3ca4ed3a293d",\n    "request": {\n        "op": "auth",\n        "args": [\n            "OZUDHROKUZZNVZWHKN",\n            "1673261297304",\n            "63ae5f1064130d8e931b5d937500461b87c00b2a939284e455fe8ea1e27387f6"\n        ]\n    }\n}\n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Example signature algorithms can be found ",(0,o.kt)("a",{href:"https://github.com/bybit-exchange/api-usage-examples"},"here"),".")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Due to network complexity, your may get disconnected at any time. Please follow the instructions below to ensure that you receive WebSocket messages on time:"),(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},"Keep connection alive by ",(0,o.kt)("a",{href:"#t-heartbeat"},"sending heartbeat packet")),(0,o.kt)("li",{parentName:"ol"},"Reconnect as soon as possible if disconnected"))),(0,o.kt)("h2",{id:"ip-limits"},"IP Limits"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Do not frequently connect and disconnect the connection."),(0,o.kt)("li",{parentName:"ul"},"Do not build over 500 connections in 5 minutes. This is counted separately per WebSocket endpoint.")),(0,o.kt)("h2",{id:"how-to-send-heartbeat-packet"},"How to Send Heartbeat Packet"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"How to Send")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'ws.send(\'{"op":"ping"}\');\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Pong response Example")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// Pong example of public channel\n{\n    "success": true,\n    "ret_msg": "pong",\n    "conn_id": "13271fcb-53ed-4e80-948e-2bdbe3a6587d",\n    "req_id": "",\n    "op": "ping"\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// Pong example of private channel\n{\n    "success": true,\n    "ret_msg": "pong",\n    "conn_id": "16c79bf6-267d-4e06-a0c1-3ca4ed3a293d",\n    "request": {\n        "op": "ping",\n        "args": null\n    }\n}\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"To avoid networks or program issues, we recommend that you send the ",(0,o.kt)("code",null,"ping")," heartbeat packet every ",(0,o.kt)("b",null,"20")," seconds to maintain the WebSocket connection.")),(0,o.kt)("h2",{id:"how-to-subscribe-to-topics"},"How to Subscribe to Topics"),(0,o.kt)("h3",{id:"understanding-websocket-filters"},"Understanding Websocket Filters"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"How to subscribe with a filter")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// Subscribing level 1 orderbook\n{\n    "req_id": "test", // optional\n    "op": "subscribe",\n    "args": [\n        "orderbook.1.BTCUSDT"\n    ]\n}\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Support subscribe multiple symbols and topics, separate with ','.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// Example: Subscribing to the trade data for BTCUSDT and ETHUSDT\n{\n    "req_id": "test", // optional\n    "op": "subscribe",\n    "args": [\n        "publicTrade.BTCUSDT",\n        "publicTrade.ETHUSDT"\n    ]\n}\n')),(0,o.kt)("p",null,"After establishing the connection, you can subscribe to a new topic by sending a JSON request. The request formats are as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'ws.send(\'{"op": "subscribe", "args": ["orderbook.1.BTCUSDT","publicTrade.BTCUSDT","orderbook.1.ETHUSDT]}\')\n')),(0,o.kt)("h3",{id:"understanding-websocket-filters-unsubscription"},"Understanding Websocket Filters unsubscription"),(0,o.kt)("p",null,"After successful subscription, you can unsubscribe by sending a JSON request. The request formats are as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'ws.send(\'{"op": "unsubscribe", "args": ["publicTrade.BTCUSDT"]}\');\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "op": "unsubscribe",\n    "args": [\n        "publicTrade.BTCUSDT"\n    ]\n}\n')),(0,o.kt)("h2",{id:"understanding-subscription-response"},"Understanding Subscription Response"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Subscription Response")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// Subscription response of public channel\n{\n    "success": true,\n    "ret_msg": "",\n    "conn_id": "322b49ce-d6a5-494a-9019-f1d51cd541ae",\n    "req_id": "",\n    "op": "subscribe"\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'// Subscription response of private channel\n{\n    "success": true,\n    "ret_msg": "",\n    "conn_id": "16c79bf6-267d-4e06-a0c1-3ca4ed3a293d",\n    "request": {\n        "op": "subscribe",\n        "args": [\n            "copyTradePosition",\n            "copyTradeOrder",\n            "copyTradeExecution"\n        ]\n    }\n}\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Once you subscribe successfully, you'd receive result information. You can determine whether the subscription is successful based on the response.")))}d.isMDXComponent=!0}}]);