"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[2069],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>c});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),p=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),k=p(r),c=a,g=k["".concat(d,".").concat(c)]||k[c]||s[c]||i;return r?n.createElement(g,l(l({ref:t},m),{},{components:r})):n.createElement(g,l({ref:t},m))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},14105:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const i={title:"Amend Order",sidebar_label:"Amend Order",sidebar_position:2},l=void 0,o={unversionedId:"v5/order/amend-order",id:"v5/order/amend-order",title:"Amend Order",description:"You can only modify unfilled or partially filled orders.",source:"@site/docs/v5/order/amend-order.mdx",sourceDirName:"v5/order",slug:"/v5/order/amend-order",permalink:"/docs/v5/order/amend-order",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Amend Order",sidebar_label:"Amend Order",sidebar_position:2},sidebar:"v5SideBar",previous:{title:"Place Order",permalink:"/docs/v5/order/create-order"},next:{title:"Cancel Order",permalink:"/docs/v5/order/cancel-order"}},d={},p=[{value:"HTTP Request",id:"http-request",level:3},{value:"Request Parameters",id:"request-parameters",level:3},{value:"Response Parameters",id:"response-parameters",level:3},{value:"Request Example",id:"request-example",level:3},{value:"Response Example",id:"response-example",level:3}],m=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},s=m("Button"),k=m("Tabs"),c=m("TabItem"),g={toc:p};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"info",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"You can only modify ",(0,a.kt)("strong",{parentName:"p"},"unfilled")," or ",(0,a.kt)("strong",{parentName:"p"},"partially filled")," orders.")),(0,a.kt)("h3",{id:"http-request"},"HTTP Request"),(0,a.kt)("p",null,"POST ",(0,a.kt)("inlineCode",{parentName:"p"},"/v5/order/amend")),(0,a.kt)("h3",{id:"request-parameters"},"Request Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Comments"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"../enum#category"},"category")),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"true")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Product type ",(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{parentName:"td",href:"../acct-mode#uta-20"},"UTA2.0"),", ",(0,a.kt)("a",{parentName:"td",href:"../acct-mode#uta-10"},"UTA1.0"),": ",(0,a.kt)("inlineCode",{parentName:"td"},"linear"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"inverse"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"spot"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"option")),(0,a.kt)("li",null,"classic account: ",(0,a.kt)("inlineCode",{parentName:"td"},"linear"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"inverse"),", ",(0,a.kt)("inlineCode",{parentName:"td"},"spot"))))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"symbol"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"true")),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Symbol name, like ",(0,a.kt)("inlineCode",{parentName:"td"},"BTCUSDT"),", uppercase only")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"orderId"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order ID. Either ",(0,a.kt)("inlineCode",{parentName:"td"},"orderId")," or ",(0,a.kt)("inlineCode",{parentName:"td"},"orderLinkId")," is required")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"orderLinkId"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"User customised order ID. Either ",(0,a.kt)("inlineCode",{parentName:"td"},"orderId")," or ",(0,a.kt)("inlineCode",{parentName:"td"},"orderLinkId")," is required")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"orderIv"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Implied volatility. ",(0,a.kt)("inlineCode",{parentName:"td"},"option")," ",(0,a.kt)("strong",{parentName:"td"},"only"),". Pass the real value, e.g for 10%, 0.1 should be passed")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"triggerPrice"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("ul",null,(0,a.kt)("li",null,"For Perps & Futures, it is the conditional order trigger price. If you expect the price to rise to trigger your conditional order, make sure:",(0,a.kt)("br",null)," ",(0,a.kt)("em",{parentName:"td"},"triggerPrice > market price"),(0,a.kt)("br",null),"Else, ",(0,a.kt)("em",{parentName:"td"},"triggerPrice < market price")),(0,a.kt)("li",null,"For spot, it is the TP/SL and Conditional order trigger price")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"qty"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order quantity after modification. Do not pass it if not modify the qty")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"price"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order price after modification. Do not pass it if not modify the price")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"tpslMode"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"TP/SL mode ",(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"Full"),": entire position for TP/SL. Then, tpOrderType or slOrderType must be ",(0,a.kt)("inlineCode",{parentName:"td"},"Market")),(0,a.kt)("li",null,(0,a.kt)("inlineCode",{parentName:"td"},"Partial"),": partial position tp/sl. Limit TP/SL order are supported. Note: When create limit tp/sl, tpslMode is ",(0,a.kt)("strong",{parentName:"td"},"required")," and it must be ",(0,a.kt)("inlineCode",{parentName:"td"},"Partial"))),"Valid for ",(0,a.kt)("inlineCode",{parentName:"td"},"linear")," & ",(0,a.kt)("inlineCode",{parentName:"td"},"inverse"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"takeProfit"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},'Take profit price after modification. If pass "0", it means cancel the existing take profit of the order. Do not pass it if you do not want to modify the take profit. ',(0,a.kt)("em",{parentName:"td"},"valid for ",(0,a.kt)("inlineCode",{parentName:"em"},"spot"),"(UTA), ",(0,a.kt)("inlineCode",{parentName:"em"},"linear"),", ",(0,a.kt)("inlineCode",{parentName:"em"},"inverse")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"stopLoss"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},'Stop loss price after modification. If pass "0", it means cancel the existing stop loss of the order. Do not pass it if you do not want to modify the stop loss. ',(0,a.kt)("em",{parentName:"td"},"valid for ",(0,a.kt)("inlineCode",{parentName:"em"},"spot"),"(UTA), ",(0,a.kt)("inlineCode",{parentName:"em"},"linear"),", ",(0,a.kt)("inlineCode",{parentName:"em"},"inverse")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"../enum#triggerby"},"tpTriggerBy")),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The price type to trigger take profit. When set a take profit, this param is ",(0,a.kt)("strong",{parentName:"td"},"required")," if no initial value for the order")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"../enum#triggerby"},"slTriggerBy")),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The price type to trigger stop loss. When set a take profit, this param is ",(0,a.kt)("strong",{parentName:"td"},"required")," if no initial value for the order")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("a",{parentName:"td",href:"../enum#triggerby"},"triggerBy")),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Trigger price type")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"tpLimitPrice"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Limit order price when take profit is triggered. Only working when original order sets partial limit tp/sl. ",(0,a.kt)("em",{parentName:"td"},"valid for ",(0,a.kt)("inlineCode",{parentName:"em"},"spot"),"(UTA), ",(0,a.kt)("inlineCode",{parentName:"em"},"linear"),", ",(0,a.kt)("inlineCode",{parentName:"em"},"inverse")))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"slLimitPrice"),(0,a.kt)("td",{parentName:"tr",align:"left"},"false"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Limit order price when stop loss is triggered. Only working when original order sets partial limit tp/sl. ",(0,a.kt)("em",{parentName:"td"},"valid for ",(0,a.kt)("inlineCode",{parentName:"em"},"spot"),"(UTA), ",(0,a.kt)("inlineCode",{parentName:"em"},"linear"),", ",(0,a.kt)("inlineCode",{parentName:"em"},"inverse")))))),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The ack of amend order request indicates that the request is successfully accepted. Please use websocket order stream to confirm the order status")),(0,a.kt)("a",{href:"/api-explorer/v5/trade/amend-order"},(0,a.kt)(s,{mdxType:"Button"},"RUN >>")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"response-parameters"},"Response Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Comments"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"orderId"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"Order ID")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"orderLinkId"),(0,a.kt)("td",{parentName:"tr",align:"left"},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"User customised order ID")))),(0,a.kt)("h3",{id:"request-example"},"Request Example"),(0,a.kt)(k,{groupId:"programming-languages",mdxType:"Tabs"},(0,a.kt)(c,{value:"http",label:"HTTP",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-http"},'POST /v5/order/amend HTTP/1.1\nHost: api-testnet.bybit.com\nX-BAPI-SIGN: XXXXX\nX-BAPI-API-KEY: XXXXX\nX-BAPI-TIMESTAMP: 1672217108106\nX-BAPI-RECV-WINDOW: 5000\nContent-Type: application/json\n\n{\n    "category": "linear",\n    "symbol": "ETHPERP",\n    "orderLinkId": "linear-004",\n    "triggerPrice": "1145",\n    "qty": "0.15",\n    "price": "1050",\n    "takeProfit": "0",\n    "stopLoss": "0"\n}\n'))),(0,a.kt)(c,{value:"python",label:"Python",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from pybit.unified_trading import HTTP\nsession = HTTP(\n    testnet=True,\n    api_key="XXXXX",\n    api_secret="XXXXX",\n)\nprint(session.amend_order(\n    category="linear",\n    symbol="ETHPERP",\n    orderLinkId="linear-004",\n    triggerPrice="1145",\n    qty="0.15",\n    price="1050",\n    takeProfit="0",\n    stopLoss="0",\n))\n'))),(0,a.kt)(c,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'import com.bybit.api.client.restApi.BybitApiTradeRestClient;\nimport com.bybit.api.client.domain.*;\nimport com.bybit.api.client.domain.trade.*;\nimport com.bybit.api.client.service.BybitApiClientFactory;\nBybitApiClientFactory factory = BybitApiClientFactory.newInstance("YOUR_API_KEY", "YOUR_API_SECRET");\nBybitApiAsyncTradeRestClient client = factory.newAsyncTradeRestClient();\nvar amendOrderRequest = TradeOrderRequest.builder().orderId("1523347543495541248").category(ProductType.LINEAR).symbol("XRPUSDT")\n                        .price("0.5")  // setting a new price, for example\n                        .qty("15")  // and a new quantity\n                        .build();\nvar amendedOrder = client.amendOrder(amendOrderRequest);\nSystem.out.println(amendedOrder);\n'))),(0,a.kt)(c,{value:"DotNet",label:".Net",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c#"},'using bybit.net.api.ApiServiceImp;\nusing bybit.net.api.Models.Trade;\nBybitTradeService tradeService = new(apiKey: "xxxxxxxxxxxxxx", apiSecret: "xxxxxxxxxxxxxxxxxxxxx");\nvar orderInfoString = await TradeService.AmendOrder(orderId: "1523347543495541248", category:Category.LINEAR, symbol: "XRPUSDT", price:"0.5", qty:"15");\nConsole.WriteLine(orderInfoString);\n'))),(0,a.kt)(c,{value:"Node",label:"Node.js",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-n4js"},"const { RestClientV5 } = require('bybit-api');\n\nconst client = new RestClientV5({\n    testnet: true,\n    key: 'apikey',\n    secret: 'apisecret',\n});\n\nclient\n    .amendOrder({\n        category: 'linear',\n        symbol: 'ETHPERP',\n        orderLinkId: 'linear-004',\n        triggerPrice: '1145',\n        qty: '0.15',\n        price: '1050',\n        takeProfit: '0',\n        stopLoss: '0',\n    })\n    .then((response) => {\n        console.log(response);\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n")))),(0,a.kt)("h3",{id:"response-example"},"Response Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "retCode": 0,\n    "retMsg": "OK",\n    "result": {\n        "orderId": "c6f055d9-7f21-4079-913d-e6523a9cfffa",\n        "orderLinkId": "linear-004"\n    },\n    "retExtInfo": {},\n    "time": 1672217093461\n}\n')))}u.isMDXComponent=!0}}]);