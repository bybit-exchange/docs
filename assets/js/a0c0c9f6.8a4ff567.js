"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[28972],{3905:(t,e,n)=>{n.d(e,{Zo:()=>c,kt:()=>h});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var u=r.createContext({}),s=function(t){var e=r.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},c=function(t){var e=s(t.components);return r.createElement(u.Provider,{value:e},t.children)},d="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,u=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),d=s(n),k=a,h=d["".concat(u,".").concat(k)]||d[k]||p[k]||l;return n?r.createElement(h,o(o({ref:e},c),{},{components:n})):r.createElement(h,o({ref:e},c))}));function h(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=k;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=t,i[d]="string"==typeof t?t:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},79074:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const l={title:"Different Account Modes",sidebar_label:"Different Account Modes"},o=void 0,i={unversionedId:"v5/acct-mode",id:"v5/acct-mode",title:"Different Account Modes",description:"There are currently three account modes existing on the Bybit platform, namely classic account, unified account 1.0, and unified account 2.0.",source:"@site/docs/v5/acct-mode.mdx",sourceDirName:"v5",slug:"/v5/acct-mode",permalink:"/docs/v5/acct-mode",draft:!1,tags:[],version:"current",frontMatter:{title:"Different Account Modes",sidebar_label:"Different Account Modes"},sidebar:"v5SideBar",previous:{title:"Integration Guidance",permalink:"/docs/v5/guide"},next:{title:"Get Announcement",permalink:"/docs/v5/announcement"}},u={},s=[{value:"UTA 2.0",id:"uta-20",level:2},{value:"UTA 1.0",id:"uta-10",level:2},{value:"Classic Account",id:"classic-account",level:2},{value:"Determine account mode through API",id:"determine-account-mode-through-api",level:2},{value:"API usage changes for UTA 2.0",id:"api-usage-changes-for-uta-20",level:2}],c={toc:s},d="wrapper";function p(t){let{components:e,...l}=t;return(0,a.kt)(d,(0,r.Z)({},c,l,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There are currently three account modes existing on the Bybit platform, namely classic account, unified account 1.0, and unified account 2.0."),(0,a.kt)("h2",{id:"uta-20"},"UTA 2.0"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Testnet only at the moment")),(0,a.kt)("p",null,"This account mode is the ultimate version of the unified account, integrating inverse contracts, USDT perpetual, USDC perpetual, USDC Futures,\nspot and options into a unified trading system. In cross margin and portifolio margin modes, margin is shared among all trades."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"uta2.0",src:n(42837).Z,width:"1702",height:"648"})),(0,a.kt)("h2",{id:"uta-10"},"UTA 1.0"),(0,a.kt)("p",null,'Under this account mode, inverse contract transactions are in a separate trading account, and the corresponding margin currency needs to be deposited\ninto the "inverse derivatives account" before trading, and the margins are not shared between each other. For USDT perpetual, USDC perpetual, USDC\nFutures, spot and options are all traded within the "unified trading"'),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"uta1.0",src:n(3666).Z,width:"2018",height:"878"})),(0,a.kt)("h2",{id:"classic-account"},"Classic Account"),(0,a.kt)("p",null,'Under this account mode, contract transactions and spot transactions are separated. Inverse contracts and USDT perpetual transactions are completed in\nthe "derivatives account", and spot transactions are completed in the "spot account"'),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"classic",src:n(67693).Z,width:"1772",height:"784"})),(0,a.kt)("h2",{id:"determine-account-mode-through-api"},"Determine account mode through API"),(0,a.kt)("p",null,"Use the key of the corresponding account to call ",(0,a.kt)("a",{parentName:"p",href:"account/account-info#"},"Get Account Info"),", look at the field ",(0,a.kt)("inlineCode",{parentName:"p"},"unifiedMarginStatus")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1"),": classic account"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"3"),": uta1.0"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"4"),": uta1.0 (pro version)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"5"),": uta2.0"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"6"),": uta2.0 (pro version)",(0,a.kt)("br",null),(0,a.kt)("i",null,"P.S. uta or uta (pro), they are the same thing, but pro has a slight performance advantage when trading via API"))),(0,a.kt)("h2",{id:"api-usage-changes-for-uta-20"},"API usage changes for UTA 2.0"),(0,a.kt)("span",{class:"blocky_table"},(0,a.kt)("table",null,(0,a.kt)("tr",null,(0,a.kt)("th",{rowSpan:"2",align:"center"},"API category"),(0,a.kt)("th",{rowSpan:"2"},"API"),(0,a.kt)("th",null,"uta2.0"),(0,a.kt)("th",null,"uta1.0")),(0,a.kt)("tr",null,(0,a.kt)("td",{align:"center"},"category=inverse"),(0,a.kt)("td",{align:"center"},"category=inverse")),(0,a.kt)("tr",null,(0,a.kt)("td",{align:"center"},"Market"),(0,a.kt)("td",null,(0,a.kt)("a",{href:"market/instrument#"},"Get Instruments Info")),(0,a.kt)("td",null,'"unifiedMarginTrade" is true after UTA2.0 is implemented'),(0,a.kt)("td",null,'"unifiedMarginTrade" is false')),(0,a.kt)("tr",null,(0,a.kt)("td",{rowSpan:"8",align:"center"},"Trade"),(0,a.kt)("td",null,(0,a.kt)("a",{href:"order/create-order#"},"Place Order")),(0,a.kt)("td",null,'Inverse Futures no longer support hedge mode, so "positionIdx" is always ',(0,a.kt)("code",null,"0")),(0,a.kt)("td",null,'Inverse Futures support hedge mode, so "positionIdx" can be ',(0,a.kt)("code",null,"0"),", ",(0,a.kt)("code",null,"1"),", ",(0,a.kt)("code",null,"2"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"order/open-order#"},"Get Open & Closed Orders")),(0,a.kt)("td",null,"To query the final status orders, use ",(0,a.kt)("code",null,"openOnly"),"=1, and only retain the latest 500 orders."),(0,a.kt)("td",null,"To query the final status orders, use ",(0,a.kt)("code",null,"openOnly"),"=2")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"order/order-list#"},"Get Order History")),(0,a.kt)("td",null,"1. ",(0,a.kt)("code",null,"orderStatus")," is not passed, and all final orders are queried by default",(0,a.kt)("br",null),"2. Parameters ",(0,a.kt)("code",null,"baseCoin")," and ",(0,a.kt)("code",null,"settleCoin")," are supported",(0,a.kt)("br",null),"3. Active order query is not supported, and some final orders are limited to query",(0,a.kt)("br",null),"4. Cancelled orders save up to 24 hours",(0,a.kt)("br",null),"5. Only orders generated after the upgrade can be queried"),(0,a.kt)("td",null,"1. ",(0,a.kt)("code",null,"orderStatus")," is not passed, and the default query is active and final orders",(0,a.kt)("br",null),"2. The parameters ",(0,a.kt)("code",null,"baseCoin")," and ",(0,a.kt)("code",null,"settleCoin")," are not supported",(0,a.kt)("br",null),"3. Active orders and various final orders are always supported",(0,a.kt)("br",null),"4. No such restriction")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"order/execution#"},"Get Trade History")),(0,a.kt)("td",null,"1. Supports ",(0,a.kt)("code",null,"baseCoin")," query; ",(0,a.kt)("br",null),"2. The returned createType has a value",(0,a.kt)("br",null),"3. Only transactions generated after the upgrade can be queried"),(0,a.kt)("td",null,"1. ",(0,a.kt)("code",null,"baseCoin")," query is not supported;",(0,a.kt)("br",null),"2. The returned createType is always empty string ",(0,a.kt)("code",null,'""'))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"order/batch-place#"},"Batch Place Order")),(0,a.kt)("td",null,"Support inverse contract"),(0,a.kt)("td",null,"Not support inverse contract")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"order/batch-amend#"},"Batch Amend Order")),(0,a.kt)("td",null,"Support inverse contract"),(0,a.kt)("td",null,"Not support inverse contract")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"order/batch-cancel#"},"Batch Cancel Order")),(0,a.kt)("td",null,"Support inverse contract"),(0,a.kt)("td",null,"Not support inverse contract")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"order/dcp#"},"Set Disconnect Cancel All")),(0,a.kt)("td",null,"Support inverse contract, inverse trading orders will be cancelled when dcp is triggered"),(0,a.kt)("td",null,"Not support inverse contract, inverse trading orders will not be cancelled when dcp is triggered")),(0,a.kt)("tr",null,(0,a.kt)("td",{rowSpan:"3",align:"center"},"Pre-upgrade"),(0,a.kt)("td",null,(0,a.kt)("a",{href:"pre-upgrade/order-list#"},"Get Pre-upgrade Order History")),(0,a.kt)("td",null,"Supports querying orders generated when it is a classic account or unified account 1.0"),(0,a.kt)("td",{align:"center"},"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"pre-upgrade/execution#"},"Get Pre-upgrade Trade History")),(0,a.kt)("td",null,"Supports querying transactions generated when it is a classic account or unified account 1.0"),(0,a.kt)("td",{align:"center"},"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"pre-upgrade/close-pnl#"},"Get Pre-upgrade Closed PnL")),(0,a.kt)("td",null,"Supports querying close pnl generated when it is a classic account or unified account 1.0"),(0,a.kt)("td",{align:"center"},"-")),(0,a.kt)("tr",null,(0,a.kt)("td",{rowSpan:"5",align:"center"},"Position"),(0,a.kt)("td",null,(0,a.kt)("a",{href:"position#"},"Get Position Info")),(0,a.kt)("td",null,"1. Passing multiple symbols is not supported",(0,a.kt)("br",null),'2. In the response, there are changes in the meaning or use of "tradeMode", "liqPrice", "bustPrice" fields'),(0,a.kt)("td",null,"1. Supports passing multiple symbols")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"position/close-pnl#"},"Get Closed PnL")),(0,a.kt)("td",null,"Only the close pnl generated after the upgrade can be queried."),(0,a.kt)("td",{align:"center"}," - ")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"position/leverage#"},"Set Leverage")),(0,a.kt)("td",null,"Inverse perpetual and inverse Futures only support one-way position mode, and the leverage of buy and sell must be equal"),(0,a.kt)("td",null,"Inverse Futures support hedge-mode positions, and the leverage of buy and sell can be unequal")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"position/cross-isolate#"},"Switch Cross/Isolated Margin")),(0,a.kt)("td",null,"The margin mode has become the account dimension, and this interface is no longer applicable"),(0,a.kt)("td",null,"Inverse contracts support the use of this interface")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"position/position-mode#"},"Switch Position Mode")),(0,a.kt)("td",null,"Inverse Futures no longer supports hedge-mode positions"),(0,a.kt)("td",null,"Inverse Futures supports hedge-mode positions")),(0,a.kt)("tr",null,(0,a.kt)("td",{rowSpan:"3",align:"center"},"Account"),(0,a.kt)("td",null,(0,a.kt)("a",{href:"account/wallet-balance#"},"Get Wallet Balance")),(0,a.kt)("td",null,"Not support accountType=CONTRACT"),(0,a.kt)("td",null,"Support accountType=CONTRACT")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"account/transaction-log#"},"Get Transaction Log (UTA)")),(0,a.kt)("td",null,"Transaction logs for inverse contracts will be included"),(0,a.kt)("td",null,"The transaction log of the inverse contract needs to go through the interface below")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("a",{href:"account/contract-transaction-log#"},"Get Transaction Log(Classic)")),(0,a.kt)("td",null,"After upgrading to 2.0, this interface is no longer applicable."),(0,a.kt)("td",null,"Data from uta 1.0 or classic account can still be obtained")),(0,a.kt)("tr",null,(0,a.kt)("td",{rowSpan:"2",align:"center"},"Asset"),(0,a.kt)("td",null,(0,a.kt)("a",{href:"asset/delivery#"},"Get Delivery Record")),(0,a.kt)("td",null,"Support inverse futures delivery records"),(0,a.kt)("td",null,"Not support inverse futures delivery records")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"All interfaces involving accountType in this directory"),(0,a.kt)("td",null,'CONTRACT is no longer supported because "inverse derivatives account" does not exist anymore'),(0,a.kt)("td",null,"Support CONTRACT (inverse derivatives account)")),(0,a.kt)("tr",null,(0,a.kt)("td",{rowSpan:"1",align:"center"},"WebSocket Stream/Trade"),(0,a.kt)("td",null,(0,a.kt)("a",{href:"websocket/trade/guideline#"},"Websocket Trade Guideline")),(0,a.kt)("td",null,"Support inverse contract"),(0,a.kt)("td",null,"Not support inverse contract")))))}p.isMDXComponent=!0},67693:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/classic_en-caf823dac675fc922b58270405a11144.png"},3666:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/uta1_en-6c9d8956e6e72a4711e548659b96922e.png"},42837:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/uta2_en-0b31358cd2b8ae4c5555bff2a8cef626.png"}}]);